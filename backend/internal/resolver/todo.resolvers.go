package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.37

import (
	"context"

	"github.com/tf63/go-graph-exp/api/graph"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input graph.NewTodo) (*graph.Todo, error) {
	// inputを元にTodoを生成
	// -----------------------------------
	// (今回は実装しません)
	// -----------------------------------

	// 作成したTodoを返す
	todo1 := graph.Todo{
		ID:   "1",
		Text: "todo 1",
		Done: false,
	}
	return &todo1, nil
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*graph.Todo, error) {
	// テストデータを返す
	todos := []*graph.Todo{
		{ID: "1", Text: "todo 1", Done: false},
		{ID: "2", Text: "todo 2", Done: false},
		{ID: "3", Text: "todo 3", Done: false},
	}

	return todos, nil
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
